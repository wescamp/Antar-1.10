#textdomain wesnoth-Antar

########## taken from "The Earth Gut"
########## many thanks to Annonymissimus



#define FORCE_TO_HEAL_WOUNDED_UNITS SIDE SEARCHRADIUS
	[event]
		name=turn refresh
		first_time_only=no
		[if]
			[variable]
				name=side_number
				numerical_equals={SIDE}
			[/variable]
			[then]
				{CLEAR_VARIABLE c_InjuredUnitsDestinations}
				[fire_event]
					name=free_healed_units
				[/fire_event]

				[store_unit]
					variable=u_InjuredUnits
					[filter]
						side={SIDE}
						[and]
							#formula="max_hitpoints > hitpoints" #as soon as they're wounded
							formula="max_hitpoints > hitpoints"
						[/and]
						[not]
							role=heals_side_{SIDE}
						[/not]
						[not]
							canrecruit=yes
						[/not]
					[/filter]
				[/store_unit]
				{FOREACH u_InjuredUnits i_CurrentUnit}
#					{DEBUG_MSG _"Injured unit $u_InjuredUnits[$i_CurrentUnit].name| has been found."}

					#set attacks_left to 0 no matter if the unit is able to retreat, to prevent trapped units from attacking
					{VARIABLE u_InjuredUnits[$i_CurrentUnit].attacks_left 0}

					[set_variable]
						name=distance
						value=4
					[/set_variable]

					[set_variable]
						name=unit_found
						value=no
					[/set_variable]

					[while]
						[variable]
							name=unit_found
							equals=no
						[/variable]
						[and]
							[variable]
								name=distance
								less_than_equal_to={SEARCHRADIUS}
							[/variable]
						[/and]
						[do]
							[store_locations]
								terrain=*^V*
								[not]
									[filter]
									[/filter]
								[/not]
								[and]
									x=$u_InjuredUnits[$i_CurrentUnit].x
									y=$u_InjuredUnits[$i_CurrentUnit].y
									radius=$distance
								[/and]
								[not]
									find_in=c_InjuredUnitsDestinations
								[/not]
								variable=c_HealLocations
							[/store_locations]
							[if]
								[variable]
									name=c_HealLocations.length
									greater_than=0
								[/variable]
								[then]
									[set_variable]
										name=unit_found
										value=yes
									[/set_variable]
								[/then]
							[/if]

							[set_variable]
								name=distance
								add=1
							[/set_variable]
						[/do]
					[/while]

					[clear_variable]
						name=distance
					[/clear_variable]

					[clear_variable]
						name=unit_found
					[/clear_variable]
#					{DEBUG_MSG _"$c_HealLocations.length| possible heal locations have been found."}
					[if]
						[variable]
							name=c_HealLocations.length
							greater_than=0
						[/variable]
						[then]
							#########################
							[if]
								[variable]
									name=u_InjuredUnits[$i_CurrentUnit].role
									equals=needs_to_heal_side_{SIDE}
								[/variable]
								[then]
								[/then]
								[else]
									#then it's a newly found wounded unit
									[set_variable]
										name=u_InjuredUnits[$i_CurrentUnit].variables.original_goto_x
										to_variable=u_InjuredUnits[$i_CurrentUnit].goto_x
									[/set_variable]
									[set_variable]
										name=u_InjuredUnits[$i_CurrentUnit].variables.original_goto_y
										to_variable=u_InjuredUnits[$i_CurrentUnit].goto_y
									[/set_variable]
								[/else]
							[/if]
							#########################
							{VARIABLE u_InjuredUnits[$i_CurrentUnit].goto_x $c_HealLocations.x}
							{VARIABLE u_InjuredUnits[$i_CurrentUnit].goto_y $c_HealLocations.y}
							{VARIABLE u_InjuredUnits[$i_CurrentUnit].role needs_to_heal_side_{SIDE}}
							{VARIABLE u_InjuredUnits[$i_CurrentUnit].variables.original_max_moves null}
#							{DEBUG_MSG _"$u_InjuredUnits[$i_CurrentUnit].name| is forced to retreat to $c_HealLocations.x|,$c_HealLocations.y|, the $i_CurrentUnit|th unit this turn."}

							{VARIABLE c_InjuredUnitsDestinations[$i_CurrentUnit].x $c_HealLocations.x}
							{VARIABLE c_InjuredUnitsDestinations[$i_CurrentUnit].y $c_HealLocations.y}
						[/then]
					[/if]
					[unstore_unit]
						variable=u_InjuredUnits[$i_CurrentUnit]
					[/unstore_unit]

					{NEXT i_CurrentUnit}
			[/then]
		[/if]
	[/event]

	[event]
		#causes the injured unit to stop once it's in a village and stay there
		name=moveto
		first_time_only=no
		[filter]
			[filter_location]
				terrain=*^V*
			[/filter_location]
			role=needs_to_heal_side_{SIDE}
		[/filter]
		{VARIABLE unit.moves 0}
		{VARIABLE unit.variables.original_max_moves $unit.max_moves}
		{VARIABLE unit.max_moves 0}
		{VARIABLE unit.role heals_side_{SIDE}}
#		{DEBUG_MSG _"$unit.name| heals now at $x1,$y1."}
		[unstore_unit]
			variable=unit
		[/unstore_unit]
	[/event]

	[event]
		name=free_healed_units
		first_time_only=no
		[store_unit]
			variable=u_HealedUnits
			[filter]
				role=heals_side_{SIDE}
				[or]
					role=needs_to_heal_side_{SIDE}
				[/or]
				[and]
					formula="max_hitpoints = hitpoints"
				[/and]
			[/filter]
		[/store_unit]
		{FOREACH u_HealedUnits i_CurrentUnit}
			{CLEAR_VARIABLE u_HealedUnits[$i_CurrentUnit].role}
			#{CLEAR_VARIABLE u_HealedUnits[$i_CurrentUnit].goto_x}
			#{CLEAR_VARIABLE u_HealedUnits[$i_CurrentUnit].goto_y}
			[if]
				[variable]
					name=u_HealedUnits[$i_CurrentUnit].variables.original_max_moves
					equals=null
				[/variable]
				[then]
					{CLEAR_VARIABLE u_HealedUnits[$i_CurrentUnit].variables.original_max_moves}
				[/then]
				[else]
					{VARIABLE u_HealedUnits[$i_CurrentUnit].max_moves $u_HealedUnits[$i_CurrentUnit].variables.original_max_moves}
					{VARIABLE u_HealedUnits[$i_CurrentUnit].moves $u_HealedUnits[$i_CurrentUnit].max_moves}
					{CLEAR_VARIABLE u_HealedUnits[$i_CurrentUnit].variables.original_max_moves}
				[/else]
			[/if]
			###########################
			[set_variable]
				name=u_HealedUnits[$i_CurrentUnit].goto_x
				to_variable=u_HealedUnits[$i_CurrentUnit].variables.original_goto_x
			[/set_variable]
			[set_variable]
				name=u_HealedUnits[$i_CurrentUnit].goto_y
				to_variable=u_HealedUnits[$i_CurrentUnit].variables.original_goto_y
			[/set_variable]
			###########################
			#{DEBUG_MSG _"$u_HealedUnits[$i_CurrentUnit].name| has finished healing at $u_HealedUnits[$i_CurrentUnit].x|,$u_HealedUnits[$i_CurrentUnit].y|, the $i_CurrentUnit|th unit this turn."}
			[unstore_unit]
				variable=u_HealedUnits[$i_CurrentUnit]
			[/unstore_unit]
			{NEXT i_CurrentUnit}
	[/event]

	[event]
		name=victory
		{CLEAR_VARIABLE u_InjuredUnits}
		{CLEAR_VARIABLE c_InjuredUnitsDestinations}
		{CLEAR_VARIABLE u_HealedUnits}
		{CLEAR_VARIABLE c_HealLocations}
		{CLEAR_VARIABLE distance}
		{CLEAR_VARIABLE unit_found}
		{CLEAR_VARIABLE side_number}
	[/event]
#enddef

