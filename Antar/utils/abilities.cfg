#textdomain wesnoth-Antar



### ABILITY_ALLIED_LEADERSHIP_LEVEL_3
### WEAPON_SPECIAL_HIT_AND_RUN
### WEAPON_SPECIAL_CLEAVE





#for Antar on level three

#define ABILITY_ALLIED_LEADERSHIP_LEVEL_3
	[leadership]
		id=allied_leadership
		value=75
		cumulative=no
		name= _ "allied leadership"
		description= _ "Allied Leadership:
This unit can lead friendly units that are next to it, making them fight better.

Adjacent friendly units of lower level will do more damage in battle. When a unit adjacent to, of a lower level than, and allied to a unit with Allied Leadership engages in combat, its attacks do 25% more damage times the difference in their levels."
		affect_self=no
		affect_allies=yes
		[affect_adjacent]
			adjacent=n,ne,se,s,sw,nw
			[filter]
				level=0
			[/filter]
		[/affect_adjacent]
	[/leadership]
	[leadership]
		id=allied_leadership
		value=50
		cumulative=no
		affect_self=no
		affect_allies=yes
		[affect_adjacent]
			adjacent=n,ne,se,s,sw,nw
			[filter]
				level=1
			[/filter]
		[/affect_adjacent]
	[/leadership]
	[leadership]
		id=allied_leadership
		value=25
		cumulative=no
		affect_self=no
		affect_allies=yes
		[affect_adjacent]
			adjacent=n,ne,se,s,sw,nw
			[filter]
				level=2
			[/filter]
		[/affect_adjacent]
	[/leadership]
#enddef

#for Antar on level three

#define ABILITY_ALLIED_LEADERSHIP_LEVEL_4
	[leadership]
		id=allied_leadership
		value=100
		cumulative=no
		name= _ "allied leadership"
		description= _ "Allied Leadership:
This unit can lead friendly units that are next to it, making them fight better.

Adjacent friendly units of lower level will do more damage in battle. When a unit adjacent to, of a lower level than, and allied to a unit with Allied Leadership engages in combat, its attacks do 25% more damage times the difference in their levels."
		affect_self=no
		affect_allies=yes
		[affect_adjacent]
			adjacent=n,ne,se,s,sw,nw
			[filter]
				level=0
			[/filter]
		[/affect_adjacent]
	[/leadership]
	[leadership]
		id=allied_leadership
		value=75
		cumulative=no
		affect_self=no
		affect_allies=yes
		[affect_adjacent]
			adjacent=n,ne,se,s,sw,nw
			[filter]
				level=1
			[/filter]
		[/affect_adjacent]
	[/leadership]
	[leadership]
		id=allied_leadership
		value=50
		cumulative=no
		affect_self=no
		affect_allies=yes
		[affect_adjacent]
			adjacent=n,ne,se,s,sw,nw
			[filter]
				level=2
			[/filter]
		[/affect_adjacent]
	[/leadership]
	[leadership]
		id=allied_leadership
		value=25
		cumulative=no
		affect_self=no
		affect_allies=yes
		[affect_adjacent]
			adjacent=n,ne,se,s,sw,nw
			[filter]
				level=3
			[/filter]
		[/affect_adjacent]
	[/leadership]
#enddef

#############################################################################################################################################################################################


 		###################
		### Hit and Run ###
		###################

		### Code original written by TheBladeRoden

#define WEAPON_SPECIAL_HIT_AND_RUN
	[dummy]
		id=hit and run
		name= _ "hit and run"
		description= _ "Hit and Run: Antar is light on his feet, this allows him to step back after attacking."
	[/dummy]
#enddef


#define HIT_AND_RUN_EVENTS
	[event]
		name=side turn
		first_time_only=no
		[store_unit]
			[filter]
				side=$side_number
				[filter_wml]
					[attack]
						[specials]
							[dummy]
								id=hit and run
							[/dummy]
						[/specials]
					[/attack]
				[/filter_wml]
			[/filter]
			variable=stored_hitandrun_unit
		[/store_unit]
		{FOREACH stored_hitandrun_unit i}
		[set_variable]
			name=stored_hitandrun_unit[$i].variables.saved_moves
			value=$stored_hitandrun_unit[$i].max_moves
		[/set_variable]
		[unstore_unit]
			variable=stored_hitandrun_unit
			find_vacant=no
		[/unstore_unit]
		{CLEAR_VARIABLE stored_hitandrun_unit}
		{NEXT i}
	[/event]

	[event]
		name=moveto
		first_time_only=no
		[filter]
			[filter_wml]
				[attack]
					[specials]
						[dummy]
							id=hit and run
						[/dummy]
					[/specials]
				[/attack]
			[/filter_wml]
		[/filter]
		[store_unit]
			[filter]
				x,y=$x1,$y1
			[/filter]
			kill=no
			variable=stored_hitandrun_unit
		[/store_unit]
		[set_variable]
			name=stored_hitandrun_unit.variables.saved_moves
			value=$unit.moves
		[/set_variable]
		[unstore_unit]
			variable=stored_hitandrun_unit
		[/unstore_unit]
		{CLEAR_VARIABLE stored_hitandrun_unit}
	[/event]

	[event]
		name=attack end
		first_time_only=no
		[filter_attack]
			special=hit and run
		[/filter_attack]
		[clear_variable]
			name=adding_moves_back
		[/clear_variable]
		[store_unit]
			variable=adding_moves_back
			[filter]
				x,y=$x1,$y1
			[/filter]
		[/store_unit]
		[set_variable]
			name=adding_moves_back.moves
			value=$unit.variables.saved_moves
		[/set_variable]
		[set_variable]
			name=adding_moves_back_minus_one
			value=$unit.variables.saved_moves
		[/set_variable]
		{ASoR_REDRAW}
		[if]                                                 ### the unit should have in any case three (or more) movepoints left after an offensive attack
			[variable]
				name=adding_moves_back_minus_one
				greater_than=3
			[/variable]
			[then]
				{VARIABLE_OP adding_moves_back_minus_one sub 1}
			[/then]
			[else]
				[if]
					[variable]
						name=adding_moves_back_minus_one
						equals=3
					[/variable]
					[then]
						### do nothing
					[/then]
					[else]
						[if]
							[variable]
								name=adding_moves_back_minus_one
								equals=2
							[/variable]
							[then]
								{VARIABLE_OP adding_moves_back_minus_one add 1}
							[/then]
							[else]
								[if]
									[variable]
										name=adding_moves_back_minus_one
										equals=1
									[/variable]
									[then]
										{VARIABLE_OP adding_moves_back_minus_one add 2}
									[/then]
									[else]
										[if]
											[variable]
												name=adding_moves_back_minus_one
												equals=0
											[/variable]
											[then]
												{VARIABLE_OP adding_moves_back_minus_one add 3}
											[/then]
										[/if]
									[/else]
								[/if]
							[/else]
						[/if]
					[/else]
				[/if]
			[/else]
		[/if]
		{ASoR_REDRAW}
		[unstore_unit]
			variable=adding_moves_back
		[/unstore_unit]
		{MODIFY_UNIT x,y=$x1,$y1 moves $adding_moves_back_minus_one}
#		{DEBUG_MSG "Antar has $adding_moves_back_minus_one moves left"}
		{CLEAR_VARIABLE adding_moves_back_minus_one}
		{CLEAR_VARIABLE adding_moves_back}
	[/event]
#enddef


#############################################################################################################################################################################################


		##############
		### Cleave ###
		##############

		### the code is written by Dugi

#define WEAPON_SPECIAL_CLEAVE
	[damage]
		id=cleave
		name= _ "cleave"
		description= _ "Cleave:
On a melee attack, whatever hits the target will also hit enemies in the two hexes that are adjacent to both the attacker and defender, in a crescent moon shape, for 50% of the original damage."
	[/damage]
#enddef

#define CLEAVE_EVENTS
	[event]
		name=attacker_hits
		first_time_only=no
		[filter_attack]
			special=cleave
		[/filter_attack]
		[harm_unit]
			[filter]
				[filter_adjacent]
					x,y=$x2,$y2
				[/filter_adjacent]
				[and]
					[filter_adjacent]
						x,y=$x1,$y1
						is_enemy=yes
					[/filter_adjacent]
				[/and]
				[not]
					side=$side_number
				[/not]
			[/filter]
			[filter_second]
				x,y=$x1,$y1
			[/filter_second]
			amount=$($weapon.damage/2)
			damage_type=$weapon.type
			fire_event=yes
			experience=yes   #Or experience=no? You decide.
		[/harm_unit]
	[/event]
	[event]
		name=defender_hits
		id=cleave_hit_retaliate
		first_time_only=no
		[filter_second_attack]
			special=cleave
		[/filter_second_attack]
		[harm_unit]
			[filter]
				[filter_adjacent]
					x,y=$x2,$y2
					is_enemy=yes
				[/filter_adjacent]
				[and]
					[filter_adjacent]
						x,y=$x1,$y1
					[/filter_adjacent]
				[/and]
				[not]
					side=$second_unit.side
				[/not]
			[/filter]
			side=$enemy_sides
			[filter_second]
				x,y=$x1,$y1
			[/filter_second]
			amount=$($second_weapon.damage/2)
			damage_type=$second_weapon.type
			fire_event=yes
			experience=yes
		[/harm_unit]
	[/event]
#enddef
