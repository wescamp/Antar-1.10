#textdomain wesnoth-Antar



### recall_Antars_loyals

### recall_Elorials_loyals

### rise_up_rise_up

### lr_scenery_item

### lr_phono_sound

### lr_scroll_to and delay

### lr_remove shroud delay time scroll to unit

### lr_limit_contemporanous_recruit

### lr_limit_recruit

### nearest unit

### check undead message

### clear guardian

### get loosers gold


#define RECALL_LOYALS_Antar
		[recall]
			id=Garulf
		[/recall]
		[recall]
			id=Dagor
		[/recall]
		[recall]
			id=Gelphrad
		[/recall]
		[recall]
			id=Careonryn
		[/recall]
		[recall]
			id=Lowitz
		[/recall]
		[recall]
			id=Segurd
		[/recall]
		[recall]
			id=Goerg
		[/recall]
		[recall]
			id=John Lord
		[/recall]
#enddef

# the following macro is copied from The_Earth_Gut

#define CHECK ELORIALS LOYALS SIDE
		[role]
			role=captain
			type=Elvish Marshal, Elvish Captain
			side={SIDE}
			[not]
				id=Elorial Din
			[/not]
			[not]
				id=Bridal
			[/not]
		[/role]
		[recall]
			role=captain
			side={SIDE}
		[/recall]
		[recall]
			id=Bridal
		[/recall]
		[recall]
			id=Emirond
		[/recall]
		[recall]
			id=Nopirmd
		[/recall]
		[recall]
			id=Laringolil
		[/recall]

		[if]
			[have_unit]
				id=Bridal
			[/have_unit]
			[else]
				[role]
					role=fighter
					type=Elvish Marshal, Elvish Captain, Elvish Fighter
					side={SIDE}
					[not]
						id=Elorial Din
					[/not]
				[/role]
				[recall]
					role=fighter
				[/recall]
			[/else]
		[/if]

		[if]
			[have_unit]
				id=Emirond
			[/have_unit]
			[else]
				[role]
					role=archer
					type=Elvish Avenger,Elvish Sharpshooter,Elvish Ranger,Elvish Marksman,Elvish Archer
					side={SIDE}
				[/role]
				[recall]
					role=archer
				[/recall]
			[/else]
		[/if]

		[if]
			[have_unit]
				id=Nopirmd
			[/have_unit]
			[else]
				[role]
					role=shaman
					type=Elvish Sylph,Elvish Shyde,Elvish Enchantress,Elvish Sorceress,Elvish Druid,Elvish Shaman
					side={SIDE}
				[/role]
				[recall]
					role=shaman
				[/recall]
			[/else]
		[/if]
#enddef

#the following macro is copied from The_Rise_of_Wesnoth

#define RISE_UP_RISE_UP X Y
	[filter]
		side=1
	[/filter]
	[filter_second]
		[not]
			#Basically not any type that has plague
			type=Walking Corpse,Soulless
		[/not]
	[/filter_second]
	[store_unit]
		variable=dead_store
		kill=yes
		[filter]
			x={X}
			y={Y}
		[/filter]
	[/store_unit]
	[unit]
		name= _ "Ghost of $dead_store.name"
		type=LR_Ghost
		side=6
		x={X}
		y={Y}
		moves=0
		[modifications]
			{TRAIT_UNDEAD}
			{TRAIT_LOYAL}
		[/modifications]
	[/unit]
#enddef

#define LR_SCENERY ITEM X Y
	[item]
		x={X}
		y={Y}
		image=userdata/data/add-ons/Antar/images/scenery/{ITEM}
	[/item]
#enddef

#define LR_PHONO SOUND
	[sound]
		name={SOUND}
	[/sound]
#enddef

#define LR_SCROLL_TO X Y DELAY_TIME
		[scroll_to]
			x={X}
			y={Y}
		[/scroll_to]
		[delay]
			time={DELAY_TIME}
		[/delay]
#enddef

#define LR_REMOVE_SHROUD_SCROLLTO X Y RADIUS SIDE
	[remove_shroud]
		x={X}
		y={Y}
		radius={RADIUS}
		side={SIDE}
	[/remove_shroud]
	[delay]
		time=200
	[/delay]
	[scroll_to]
		x={X}
		y={Y}
	[/scroll_to]
#enddef

#the following macro is copied from The_Earth_Gut

#define LR_LIMIT_CONTEMPORANEOUS_RECRUITS_DIFFICULTY_DEPENDANT SIDE TYPE LIMIT_EASY LIMIT_NORMAL LIMIT_HARD
	#ifdef EASY
	{LIMIT_CONTEMPORANEOUS_RECRUITS {SIDE} ({TYPE}) {LIMIT_EASY}}
	#endif
	#ifdef NORMAL
	{LIMIT_CONTEMPORANEOUS_RECRUITS {SIDE} ({TYPE}) {LIMIT_NORMAL}}
	#endif
	#ifdef HARD
	{LIMIT_CONTEMPORANEOUS_RECRUITS {SIDE} ({TYPE}) {LIMIT_HARD}}
	#endif
#enddef

#the following macro is copied from The_Earth_Gut

#define LR_LIMIT_RECRUITS_DIFFICULTY_DEPENDANT SIDE TYPE LIMIT_EASY LIMIT_NORMAL LIMIT_HARD
	#ifdef EASY
	{LIMIT_RECRUITS {SIDE} ({TYPE}) {LIMIT_EASY}}
	#endif
	#ifdef NORMAL
	{LIMIT_RECRUITS {SIDE} ({TYPE}) {LIMIT_NORMAL}}
	#endif
	#ifdef HARD
	{LIMIT_RECRUITS {SIDE} ({TYPE}) {LIMIT_HARD}}
	#endif
#enddef

##the following macro is copied from ? soory I cant remember

# Finds the nearest unit to X, Y that matches FILTER and stores it in VARIABLE
#define NEAREST_UNIT X Y FILTER VARIABLE
	[set_variable]
		name=distance
		value=0
	[/set_variable]

	[set_variable]
		name=unit_found
		value=no
	[/set_variable]

	# Store matching units within a radius of "distance". If nothing got stored,
	# add one to "distance" and try again. Do this until a unit is found, or
	# "distance" goes over the max.
	[while]
		[variable]
			name=unit_found
			equals=no
		[/variable]
		[and]
			[variable]
				name=distance
				less_than_equal_to=99  # max
			[/variable]
		[/and]

		[do]
			[store_unit]
				[filter]
					{FILTER}
					[and]
						[not]
							x={X}
							y={Y}
						[/not]
						[not]
							x=$x1
							y=$y1
						[/not]
						[not]
							id=$last_unit_id
						[/not]
						[not]
							id=unit
						[/not]
						[not]
							id="Antar"
						[/not]
						[not]
							id="Elorial Din"
						[/not]
						[not]
							id="Dagor"
						[/not]
						[not]
							id="Gelphrad"
						[/not]
						[filter_location]
							x={X}
							y={Y}
							radius=$distance
						[/filter_location]
					[/and]
				[/filter]
				variable={VARIABLE}
			[/store_unit]

			[if]
				[variable]
					name={VARIABLE}.length
					greater_than=0
				[/variable]
				[then]
					[set_variable]
						name=unit_found
						value=yes
					[/set_variable]
				[/then]
			[/if]

			[set_variable]
				name=distance
				add=1
			[/set_variable]
		[/do]
	[/while]

	[clear_variable]
		name=distance
	[/clear_variable]

	[clear_variable]
		name=unit_found
	[/clear_variable]
#enddef


#define CHECK_UNDEAD_MESSAGE
	[if]
		[variable]
			name=undead_disappear_message
			equals=no
		[/variable]
		[then]
			[message]
				speaker="Antar"
				message= _ "It happens again."
			[/message]
			[message]
				speaker="Dagor"
				message= _ "Without their master the undead crumble to dust."
			[/message]
		[/then]
		[else]
			[message]
				speaker="Antar"
				message= _ "The rest of the undead ... ?"
			[/message]
			[message]
				speaker="Dagor"
				message= _ "Now that their master is no longer, the demonic warrior disappear."
			[/message]
			{VARIABLE_OP undead_disappear_message value yes}
		[/else]
	[/if]
#enddef

#define CLEAR_GUARDIAN_DEPRECIATED ID                                          ### l√∂schen?
	[if]
		[have_unit]
			id={ID}
		[/have_unit]
		[then]
			[store_unit]
				[filter]
					id={ID}
				[/filter]
				kill=yes
				variable={ID}_store
			[/store_unit]
			[unit]
				id={ID}
				name= _ "{ID}"
				type=${ID}_store.type
				side=${ID}_store.side
				x,y=${ID}_store.x,${ID}_store.y
				experience=${ID}_store.experience
				moves=${ID}_store.moves
				random_traits=no
			[/unit]
			[unstore_unit]
				variable={ID}_store
			[/unstore_unit]
			[clear_variable]
				name={ID}_store
			[/clear_variable]
		[/then]
	[/if]
#enddef

#define CLEAR_GUARDIAN ID
	[if]
		[have_unit]
			id={ID}
		[/have_unit]
		[then]
			[store_unit]
				[filter]
					id={ID}
				[/filter]
				kill=yes
				variable={ID}_store
			[/store_unit]
			[clear_variable]
				name={ID}_store.ai_special
			[/clear_variable]
			[clear_variable]
				name={ID}_store.status.guardian
			[/clear_variable]
			[unstore_unit]
				variable={ID}_store
			[/unstore_unit]
			[clear_variable]
				name={ID}_store
			[/clear_variable]
		[/then]
	[/if]
#enddef

#define GET LOOSERS_GOLD
		### only makes sense when event happens inside a castle
		[if]
			[have_location]
				id=$second_unit.id
				terrain=K*,C*
				[and]
					x,y=$x2,$y2
					radius=1
				[/and]
			[/have_location]
			[then]
				[store_gold]
					side=$unit.side
					variable=looser_gold
				[/store_gold]
				{VARIABLE warchest_x $x1}
				{VARIABLE warchest_y $y1}
				{VARIABLE_OP warchest_x sub 1}
				{LR_SCENERY (warchest-closed.png) ($warchest_x) ($warchest_y)}
#				{DEBUG_MSG "looser_gold  is $looser_gold"}
				[if]
					[variable]
						name=looser_gold
						greater_than=0
					[/variable]
					[then]
#						{DEBUG_MSG "greater than 0"}
						[kill]
							x,y=$x1,$y1
							animate=no
						[/kill]
						[if]
							[variable]
								name=looser_gold
								greater_than=30
							[/variable]
							[then]
#								{DEBUG_MSG "greater than 30"}
								[gold]
									side=$unit.side
									amount=-$looser_gold
								[/gold]
								[gold]
									side=$second_unit.side
									amount=$looser_gold
								[/gold]
								### round, otherwise the folloeing message sounds weired
								{VARIABLE_OP looser_gold round -1}
								[message]
									speaker=second_unit
									message= _ "Hey, I found a war chest here!"
								[/message]
								{LR_PHONO (open-chest.wav)}
								[remove_item]
									x=$x1
									y=$y1
									image="scenery/warchest-closed.png"
								[/remove_item]
								{LR_SCENERY (warchest-open.png) ($warchest_x) ($warchest_y)}
								[message]
									speaker=second_unit
									message= _ "With about $looser_gold goldpieces inside!"
								[/message]
								{LR_PHONO gold.ogg}
							[/then]
							[else]
#								{DEBUG_MSG "less than 30"}
								[gold]
									side=$unit.side
									amount=-$looser_gold
								[/gold]
								[gold]
									side=$second_unit.side
									amount=$looser_gold
								[/gold]
								[message]
									speaker=second_unit
									message= _ "Hey, I found a war chest here!"
								[/message]
								{LR_PHONO (open-chest.wav)}
								[remove_item]
									x=$x1
									y=$y1
									image="scenery/warchest-closed.png"
								[/remove_item]
								{LR_SCENERY (warchest-open.png) ($warchest_x) ($warchest_y)}
								[message]
									speaker=second_unit
									message= _ "But not much gold left, only $looser_gold goldpieces inside! But better than nothing"
								[/message]
								{LR_PHONO gold.ogg}
							[/else]
						[/if]
					[/then]
					[else]
						[message]
							speaker=second_unit
							message= _ "I found a war chest here!"
						[/message]
						{LR_PHONO (open-chest.wav)}
						[remove_item]
							x=$x1
							y=$y1
							image="scenery/warchest-closed.png"
						[/remove_item]
						{LR_SCENERY (warchest-open.png) ($warchest_x) ($warchest_y)}
						[message]
							speaker=second_unit
							message= _ "But it is empty!"
						[/message]
					[/else]
				[/if]
			[/then]
		[/if]
		{CLEAR_VARIABLE looser_gold}
		{CLEAR_VARIABLE warchest_x}
		{CLEAR_VARIABLE warchest_y}
#enddef
