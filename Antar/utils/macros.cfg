#textdomain wesnoth-Antar

### rise_up_rise_up

### nearest unit

### kill remaining undead

### check undead message

### clear guardian

### get loosers gold

### animated fake attack

### animated fake attack 2

### disable upkeep side (taken from Dudi's LotI) used in 'Goblin Hills'


#the following macro is copied from The_Rise_of_Wesnoth

#define RISE_UP_RISE_UP X Y
	[filter]
		side=1
	[/filter]
	[filter_second]
		[not]
			#Basically not any type that has plague
			type=Walking Corpse,Soulless
		[/not]
	[/filter_second]
	[store_unit]
		variable=dead_store
		kill=yes
		[filter]
			x={X}
			y={Y}
		[/filter]
	[/store_unit]
	[unit]
		name= _ "Ghost of $dead_store.name"
		type=ASoR_Ghost
		side=6
		x={X}
		y={Y}
		moves=0
		[modifications]
			{TRAIT_UNDEAD}
			{TRAIT_LOYAL}
		[/modifications]
	[/unit]
#enddef

##the following macro is copied from ? soory I cant remember

# Finds the nearest unit to X, Y that matches FILTER and stores it in VARIABLE
#define NEAREST_UNIT X Y FILTER VARIABLE
	[set_variable]
		name=distance
		value=0
	[/set_variable]

	[set_variable]
		name=unit_found
		value=no
	[/set_variable]

	# Store matching units within a radius of "distance". If nothing got stored,
	# add one to "distance" and try again. Do this until a unit is found, or
	# "distance" goes over the max.
	[while]
		[variable]
			name=unit_found
			equals=no
		[/variable]
		[and]
			[variable]
				name=distance
				less_than_equal_to=99  # max
			[/variable]
		[/and]
		[do]
			[store_unit]
				[filter]
					{FILTER}
					[and]
						[not]
							x={X}
							y={Y}
						[/not]
						[not]
							x=$x1
							y=$y1
						[/not]
						[not]
							id=$last_unit_id
						[/not]
						[not]
							id=unit
						[/not]
						[not]
							id="Antar"
						[/not]
						[not]
							id="Elorial Din"
						[/not]
						[not]
							id="Dagor"
						[/not]
						[not]
							id="Gelphrad"
						[/not]
						[filter_location]
							x={X}
							y={Y}
							radius=$distance
						[/filter_location]
					[/and]
				[/filter]
				variable={VARIABLE}
			[/store_unit]

			[if]
				[variable]
					name={VARIABLE}.length
					greater_than=0
				[/variable]
				[then]
					[set_variable]
						name=unit_found
						value=yes
					[/set_variable]
				[/then]
			[/if]

			[set_variable]
				name=distance
				add=1
			[/set_variable]
		[/do]
	[/while]

	[clear_variable]
		name=distance
	[/clear_variable]

	[clear_variable]
		name=unit_found
	[/clear_variable]
#enddef

#define KILL_REMAINING_UNDEAD
		[if]
			[have_unit]
				race=undead
				count=1-7
			[/have_unit]
			[then]
				[kill]
					race=undead
					animate=yes
					[not]
						canrecruit=yes
					[/not]
				[/kill]
				{CHECK_UNDEAD_MESSAGE}
			[/then]
		[/if]
		[if]
			[have_unit]
				race=undead
				count=8-99999
			[/have_unit]
			[then]
				[store_unit]
					[filter]
						race=undead
						[not]
							canrecruit=yes
						[/not]
					[/filter]
					kill=no
					variable=remaining_undead
				[/store_unit]
				[unstore_unit]
					variable=remaining_undead
				[/unstore_unit]
				{VARIABLE kill_count 0}
				{FOREACH remaining_undead i}
					[if]
						[variable]
							name=kill_count
							less_than=7
						[/variable]
						[then]
							[kill]
								id=$remaining_undead[$i].id
								animate=yes
							[/kill]
							{VARIABLE_OP kill_count add 1}
						[/then]
						[else]
							[kill]
								id=$remaining_undead[$i].id
								animate=no
							[/kill]
						[/else]
					[/if]
				{NEXT i}
				{CLEAR_VARIABLE kill_count}
				{CLEAR_VARIABLE remaining_undead}
				{CHECK_UNDEAD_MESSAGE}
			[/then]
		[/if]
#enddef

#define CHECK_UNDEAD_MESSAGE
	[if]
		[variable]
			name=undead_disappear_message
			numerical_equals=0
		[/variable]
		[then]
			[message]
				speaker="Antar"
				message= _ "The rest of the Undead?"
			[/message]
			[message]
				speaker="Dagor"
				message= _ "Now that their master is no longer, the demonic warriors disappear."
			[/message]
		[/then]
	[/if]
	[if]
		[variable]
			name=undead_disappear_message
			numerical_equals=1
		[/variable]
		[then]
			[message]
				speaker="Antar"
				message= _ "It happens again."
			[/message]
			[message]
				speaker="Dagor"
				message= _ "Without their master the undead crumble to dust."
			[/message]
		[/then]
	[/if]
	[if]
		[variable]
			name=undead_disappear_message
			numerical_equals=2
		[/variable]
		[then]
			[if]
				[have_unit]
					id="Garulf"
				[/have_unit]
				[then]
					[message]
						speaker="Garulf"
						message= _ "It's nice to watch how these corpses crumble to dust."
					[/message]
				[/then]
				[else]
					[message]
						speaker="Antar"
						message= _ "It's nice to watch how these corpses crumble to dust."
					[/message]
				[/else]
			[/if]
		[/then]
	[/if]
	[if]
		[variable]
			name=undead_disappear_message
			greater_than=2
		[/variable]
		[then]
			[message]
				speaker="Dagor"
				message= _ "Back to the dust, and rest in peace now."
			[/message]
		[/then]
	[/if]
	{VARIABLE_OP undead_disappear_message add 1}
#enddef

#define CLEAR_GUARDIAN_DEPRECIATED ID                                          ### still used?
	[if]
		[have_unit]
			id={ID}
		[/have_unit]
		[then]
			[store_unit]
				[filter]
					id={ID}
				[/filter]
				kill=yes
				variable={ID}_store
			[/store_unit]
			[unit]
				id={ID}
				name= _ "{ID}"
				type=${ID}_store.type
				side=${ID}_store.side
				x,y=${ID}_store.x,${ID}_store.y
				experience=${ID}_store.experience
				moves=${ID}_store.moves
				random_traits=no
			[/unit]
			[unstore_unit]
				variable={ID}_store
			[/unstore_unit]
			[clear_variable]
				name={ID}_store
			[/clear_variable]
		[/then]
	[/if]
#enddef

#define CLEAR_GUARDIAN ID
	[if]
		[have_unit]
			id={ID}
		[/have_unit]
		[then]
			[store_unit]
				[filter]
					id={ID}
				[/filter]
				kill=yes
				variable={ID}_store
			[/store_unit]
			[clear_variable]
				name={ID}_store.ai_special
			[/clear_variable]
			[clear_variable]
				name={ID}_store.status.guardian
			[/clear_variable]
			[unstore_unit]
				variable={ID}_store
			[/unstore_unit]
			[clear_variable]
				name={ID}_store
			[/clear_variable]
		[/then]
	[/if]
#enddef

#define GET LOOSERS_GOLD
	### only makes sense when event happens inside a castle
	[if]
		[have_location]
			id=$second_unit.id
			terrain=K*,C*
			[and]
				x,y=$x2,$y2
				radius=1
			[/and]
		[/have_location]
		[then]
			{ASoR_DELAY 500}
			[store_gold]
				side=$unit.side
				variable=looser_gold
			[/store_gold]
			{VARIABLE warchest_x $x1}
			{VARIABLE warchest_y $y1}
			{VARIABLE_OP warchest_x sub 1}
			{ASoR_SCENERY (warchest-closed.png) ($warchest_x) ($warchest_y)}
###			{DEBUG_MSG "looser_gold  is $looser_gold"}
			[if]
				[variable]
					name=looser_gold
					greater_than=0
				[/variable]
				[then]
###					{DEBUG_MSG "greater than 0"}
					[kill]
						x,y=$x1,$y1
						animate=no
					[/kill]
					[if]
						[variable]
							name=looser_gold
							greater_than=30
						[/variable]
						[then]
###								{DEBUG_MSG "greater than 30"}
							[gold]
								side=$unit.side
								amount=-$looser_gold
							[/gold]
							[gold]
								side=$second_unit.side
								amount=$looser_gold
							[/gold]
							### round, otherwise the folloeing message sounds weired
							{VARIABLE_OP looser_gold round -1}
							[message]
								speaker=second_unit
								message= _ "Hey, I found a war chest here!"
							[/message]
							{ASoR_PHONO (open-chest.wav)}
							[remove_item]
								x=$x1
								y=$y1
								image="scenery/warchest-closed.png"
							[/remove_item]
							{ASoR_SCENERY (warchest-open.png) ($warchest_x) ($warchest_y)}
							[message]
								speaker=second_unit
								message= _ "With about $looser_gold goldpieces inside!"
							[/message]
							{ASoR_PHONO gold.ogg}
						[/then]
						[else]
###								{DEBUG_MSG "less than 30"}
							[gold]
								side=$unit.side
								amount=-$looser_gold
							[/gold]
							[gold]
								side=$second_unit.side
								amount=$looser_gold
							[/gold]
							[message]
								speaker=second_unit
								message= _ "Hey, I found a war chest here!"
							[/message]
							{ASoR_PHONO (open-chest.wav)}
							[remove_item]
								x=$x1
								y=$y1
								image="scenery/warchest-closed.png"
							[/remove_item]
							{ASoR_SCENERY (warchest-open.png) ($warchest_x) ($warchest_y)}
							[message]
								speaker=second_unit
								message= _ "But not much gold left, only $looser_gold goldpieces inside! But better than nothing"
							[/message]
							{ASoR_PHONO gold.ogg}
						[/else]
					[/if]
				[/then]
				[else]
					[message]
						speaker=second_unit
						message= _ "I found a war chest here!"
					[/message]
					{ASoR_PHONO (open-chest.wav)}
					[remove_item]
						x=$x1
						y=$y1
						image="scenery/warchest-closed.png"
					[/remove_item]
					{ASoR_SCENERY (warchest-open.png) ($warchest_x) ($warchest_y)}
					[message]
						speaker=second_unit
						message= _ "But it is empty!"
					[/message]
				[/else]
			[/if]
		[/then]
	[/if]
	{CLEAR_VARIABLE looser_gold}
	{CLEAR_VARIABLE warchest_x}
	{CLEAR_VARIABLE warchest_y}
#enddef

### the following is depreciated, but is still used

#define FAKE_ATTACK ATTACKER DEFENDER ATTACK
		[animate_unit]
			[filter]
				id={ATTACKER}
			[/filter]
			flag=attack
			hits=yes
			with_bars=yes
			[primary_attack]
				name={ATTACK}
			[/primary_attack]
			[facing]
				[filter]
					id={DEFENDER}
				[/filter]
			[/facing]
			[animate]
				[filter]
					id={DEFENDER}
				[/filter]
				flag=defend
				hits=hit
				with_bars=yes
				[facing]
					id={ATTACKER}
				[/facing]
			[/animate]
		[/animate_unit]
#enddef

### the following is the new, but is still used in 05

#define FAKE_ATTACK_WITH_DAMAGE ATTACKER DEFENDER ATTACK ATTACK2 HITPOINTS HITPOINTS2
		[scroll_to_unit]
			id={ATTACKER}
		[/scroll_to_unit]
		[animate_unit]
			[filter]
				id={ATTACKER}
			[/filter]
			flag=attack
			hits=yes
			with_bars=yes
			[primary_attack]
				name={ATTACK}
			[/primary_attack]
			[facing]
				[filter]
					id={DEFENDER}
				[/filter]
			[/facing]
			[animate]
				[filter]
					id={DEFENDER}
				[/filter]
				flag=defend
				hits=hit
				with_bars=yes
				[primary_attack]
					name={ATTACK2}
				[/primary_attack]
				[facing]
					id={ATTACKER}
				[/facing]
			[/animate]
		[/animate_unit]

		[store_unit]
			[filter]
				id={ATTACKER}
			[/filter]
			variable=stored_attacker
		[/store_unit]

		{VARIABLE_OP stored_attacker.hitpoints value {HITPOINTS}}
		{VARIABLE_OP stored_attacker.experience add 1}

		[unstore_unit]
			variable=stored_attacker
			find_vacant=no
		[/unstore_unit]

		[store_unit]
			[filter]
				id={DEFENDER}
			[/filter]
			variable=stored_defender
		[/store_unit]

		{VARIABLE_OP stored_defender.hitpoints value {HITPOINTS2}}
		{VARIABLE_OP stored_defender.experience add 1}

		[unstore_unit]
			variable=stored_defender
			find_vacant=no
		[/unstore_unit]

		{ASoR_REDRAW}

		{CLEAR_VARIABLE stored_attacker}
		{CLEAR_VARIABLE stored_defender}
#enddef

    ### The following code is taking from Dugi's 'Legend of the Invicibles'

#define DISABLE_UPKEEP SIDE
    [event]
        name=side turn
        first_time_only=no
        [if]
            [variable]
                name=side_number
                equals={SIDE}
            [/variable]
            [then]
                [store_gold]
                    side={SIDE}
                    variable=upkeep_mitigation_gold_container_{SIDE}
                [/store_gold]
            [/then]
        [/if]
    [/event]
    [event]
        name=turn refresh
        first_time_only=no
        [if]
            [variable]
                name=side_number
                equals={SIDE}
            [/variable]
            [then]
                [modify_side]
                    side={SIDE}
                    gold=$upkeep_mitigation_gold_container_{SIDE}
                [/modify_side]
                [clear_variable]
                    name=upkeep_mitigation_gold_container_{SIDE}
                [/clear_variable]
            [/then]
        [/if]
    [/event]
#enddef
