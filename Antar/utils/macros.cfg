#textdomain wesnoth-Antar

### rise_up_rise_up

### nearest unit

### check undead message

### clear guardian

### get loosers gold

### animated fake attack

### animated fake attack 2

### holy amulett




#the following macro is copied from The_Rise_of_Wesnoth

#define RISE_UP_RISE_UP X Y
	[filter]
		side=1
	[/filter]
	[filter_second]
		[not]
			#Basically not any type that has plague
			type=Walking Corpse,Soulless
		[/not]
	[/filter_second]
	[store_unit]
		variable=dead_store
		kill=yes
		[filter]
			x={X}
			y={Y}
		[/filter]
	[/store_unit]
	[unit]
		name= _ "Ghost of $dead_store.name"
		type=AsoR_Ghost
		side=6
		x={X}
		y={Y}
		moves=0
		[modifications]
			{TRAIT_UNDEAD}
			{TRAIT_LOYAL}
		[/modifications]
	[/unit]
#enddef

##the following macro is copied from ? soory I cant remember

# Finds the nearest unit to X, Y that matches FILTER and stores it in VARIABLE
#define NEAREST_UNIT X Y FILTER VARIABLE
	[set_variable]
		name=distance
		value=0
	[/set_variable]

	[set_variable]
		name=unit_found
		value=no
	[/set_variable]

	# Store matching units within a radius of "distance". If nothing got stored,
	# add one to "distance" and try again. Do this until a unit is found, or
	# "distance" goes over the max.
	[while]
		[variable]
			name=unit_found
			equals=no
		[/variable]
		[and]
			[variable]
				name=distance
				less_than_equal_to=99  # max
			[/variable]
		[/and]
		[do]
			[store_unit]
				[filter]
					{FILTER}
					[and]
						[not]
							x={X}
							y={Y}
						[/not]
						[not]
							x=$x1
							y=$y1
						[/not]
						[not]
							id=$last_unit_id
						[/not]
						[not]
							id=unit
						[/not]
						[not]
							id="Antar"
						[/not]
						[not]
							id="Elorial Din"
						[/not]
						[not]
							id="Dagor"
						[/not]
						[not]
							id="Gelphrad"
						[/not]
						[filter_location]
							x={X}
							y={Y}
							radius=$distance
						[/filter_location]
					[/and]
				[/filter]
				variable={VARIABLE}
			[/store_unit]

			[if]
				[variable]
					name={VARIABLE}.length
					greater_than=0
				[/variable]
				[then]
					[set_variable]
						name=unit_found
						value=yes
					[/set_variable]
				[/then]
			[/if]

			[set_variable]
				name=distance
				add=1
			[/set_variable]
		[/do]
	[/while]

	[clear_variable]
		name=distance
	[/clear_variable]

	[clear_variable]
		name=unit_found
	[/clear_variable]
#enddef

#define CHECK_UNDEAD_MESSAGE
	[if]
		[variable]
			name=undead_disappear_message
			numerical_equals=0
		[/variable]
		[then]
			[message]
				speaker="Antar"
				message= _ "The rest of the Undead?"
			[/message]
			[message]
				speaker="Dagor"
				message= _ "Now that their master is no longer, the demonic warriors disappear."
			[/message]
			{VARIABLE_OP undead_disappear_message add 1}
		[/then]
	[/if]
	[if]
		[variable]
			name=undead_disappear_message
			numerical_equals=1
		[/variable]
		[then]
			[message]
				speaker="Antar"
				message= _ "It happens again."
			[/message]
			[message]
				speaker="Dagor"
				message= _ "Without their master the undead crumble to dust."
			[/message]
			{VARIABLE_OP undead_disappear_message add 1}
		[/then]
	[/if]
	[if]
		[variable]
			name=undead_disappear_message
			numerical_equals=2
		[/variable]
		[then]
			[if]
				[have_unit]
					id="Garulf"
				[/have_unit]
				[then]
					[message]
						speaker="Garulf"
						message= _ "It's nice to watch how these corpses crumble to dust."
					[/message]
				[/then]
				[else]
					[message]
						speaker="Antar"
						message= _ "It's nice to watch how these corpses crumble to dust."
					[/message]
				[/else]
			[/if]
			{VARIABLE_OP undead_disappear_message add 1}
		[/then]
	[/if]
	[if]
		[variable]
			name=undead_disappear_message
			greater_than=2
		[/variable]
		[then]
			[message]
				speaker="Dagor"
				message= _ "Back to the dust, and rest in peace now."
			[/message]
			{VARIABLE_OP undead_disappear_message add 1}
		[/then]
	[/if]
#enddef

#define CLEAR_GUARDIAN_DEPRECIATED ID                                          ### l√∂schen?
	[if]
		[have_unit]
			id={ID}
		[/have_unit]
		[then]
			[store_unit]
				[filter]
					id={ID}
				[/filter]
				kill=yes
				variable={ID}_store
			[/store_unit]
			[unit]
				id={ID}
				name= _ "{ID}"
				type=${ID}_store.type
				side=${ID}_store.side
				x,y=${ID}_store.x,${ID}_store.y
				experience=${ID}_store.experience
				moves=${ID}_store.moves
				random_traits=no
			[/unit]
			[unstore_unit]
				variable={ID}_store
			[/unstore_unit]
			[clear_variable]
				name={ID}_store
			[/clear_variable]
		[/then]
	[/if]
#enddef

#define CLEAR_GUARDIAN ID
	[if]
		[have_unit]
			id={ID}
		[/have_unit]
		[then]
			[store_unit]
				[filter]
					id={ID}
				[/filter]
				kill=yes
				variable={ID}_store
			[/store_unit]
			[clear_variable]
				name={ID}_store.ai_special
			[/clear_variable]
			[clear_variable]
				name={ID}_store.status.guardian
			[/clear_variable]
			[unstore_unit]
				variable={ID}_store
			[/unstore_unit]
			[clear_variable]
				name={ID}_store
			[/clear_variable]
		[/then]
	[/if]
#enddef

#define GET LOOSERS_GOLD
	### only makes sense when event happens inside a castle
	[if]
		[have_location]
			id=$second_unit.id
			terrain=K*,C*
			[and]
				x,y=$x2,$y2
				radius=1
			[/and]
		[/have_location]
		[then]
			{AsoR_DELAY 500}
			[store_gold]
				side=$unit.side
				variable=looser_gold
			[/store_gold]
			{VARIABLE warchest_x $x1}
			{VARIABLE warchest_y $y1}
			{VARIABLE_OP warchest_x sub 1}
			{AsoR_SCENERY (warchest-closed.png) ($warchest_x) ($warchest_y)}
###			{DEBUG_MSG "looser_gold  is $looser_gold"}
			[if]
				[variable]
					name=looser_gold
					greater_than=0
				[/variable]
				[then]
###					{DEBUG_MSG "greater than 0"}
					[kill]
						x,y=$x1,$y1
						animate=no
					[/kill]
					[if]
						[variable]
							name=looser_gold
							greater_than=30
						[/variable]
						[then]
###								{DEBUG_MSG "greater than 30"}
							[gold]
								side=$unit.side
								amount=-$looser_gold
							[/gold]
							[gold]
								side=$second_unit.side
								amount=$looser_gold
							[/gold]
							### round, otherwise the folloeing message sounds weired
							{VARIABLE_OP looser_gold round -1}
							[message]
								speaker=second_unit
								message= _ "Hey, I found a war chest here!"
							[/message]
							{AsoR_PHONO (open-chest.wav)}
							[remove_item]
								x=$x1
								y=$y1
								image="scenery/warchest-closed.png"
							[/remove_item]
							{AsoR_SCENERY (warchest-open.png) ($warchest_x) ($warchest_y)}
							[message]
								speaker=second_unit
								message= _ "With about $looser_gold goldpieces inside!"
							[/message]
							{AsoR_PHONO gold.ogg}
						[/then]
						[else]
###								{DEBUG_MSG "less than 30"}
							[gold]
								side=$unit.side
								amount=-$looser_gold
							[/gold]
							[gold]
								side=$second_unit.side
								amount=$looser_gold
							[/gold]
							[message]
								speaker=second_unit
								message= _ "Hey, I found a war chest here!"
							[/message]
							{AsoR_PHONO (open-chest.wav)}
							[remove_item]
								x=$x1
								y=$y1
								image="scenery/warchest-closed.png"
							[/remove_item]
							{AsoR_SCENERY (warchest-open.png) ($warchest_x) ($warchest_y)}
							[message]
								speaker=second_unit
								message= _ "But not much gold left, only $looser_gold goldpieces inside! But better than nothing"
							[/message]
							{AsoR_PHONO gold.ogg}
						[/else]
					[/if]
				[/then]
				[else]
					[message]
						speaker=second_unit
						message= _ "I found a war chest here!"
					[/message]
					{AsoR_PHONO (open-chest.wav)}
					[remove_item]
						x=$x1
						y=$y1
						image="scenery/warchest-closed.png"
					[/remove_item]
					{AsoR_SCENERY (warchest-open.png) ($warchest_x) ($warchest_y)}
					[message]
						speaker=second_unit
						message= _ "But it is empty!"
					[/message]
				[/else]
			[/if]
		[/then]
	[/if]
	{CLEAR_VARIABLE looser_gold}
	{CLEAR_VARIABLE warchest_x}
	{CLEAR_VARIABLE warchest_y}
#enddef

### the following is depreciated, but is still used

#define FAKE_ATTACK ATTACKER DEFENDER ATTACK
		[animate_unit]
			[filter]
				id={ATTACKER}
			[/filter]
			flag=attack
			hits=yes
			with_bars=yes
			[primary_attack]
				name={ATTACK}
			[/primary_attack]
			[facing]
				[filter]
					id={DEFENDER}
				[/filter]
			[/facing]
			[animate]
				[filter]
					id={DEFENDER}
				[/filter]
				flag=defend
				hits=hit
				with_bars=yes
				[facing]
					id={ATTACKER}
				[/facing]
			[/animate]
		[/animate_unit]
#enddef

### the following is the new, but is still used in 05

#define FAKE_ATTACK_WITH_DAMAGE ATTACKER DEFENDER ATTACK ATTACK2 HITPOINTS HITPOINTS2
		[scroll_to_unit]
			id={ATTACKER}
		[/scroll_to_unit]
		[animate_unit]
			[filter]
				id={ATTACKER}
			[/filter]
			flag=attack
			hits=yes
			with_bars=yes
			[primary_attack]
				name={ATTACK}
			[/primary_attack]
			[facing]
				[filter]
					id={DEFENDER}
				[/filter]
			[/facing]
			[animate]
				[filter]
					id={DEFENDER}
				[/filter]
				flag=defend
				hits=hit
				with_bars=yes
				[primary_attack]
					name={ATTACK2}
				[/primary_attack]
				[facing]
					id={ATTACKER}
				[/facing]
			[/animate]
		[/animate_unit]

		[store_unit]
			[filter]
				id={ATTACKER}
			[/filter]
			variable=stored_attacker
		[/store_unit]

		{VARIABLE_OP stored_attacker.hitpoints value {HITPOINTS}}
		{VARIABLE_OP stored_attacker.experience add 1}

		[unstore_unit]
			variable=stored_attacker
			find_vacant=no
		[/unstore_unit]

		[store_unit]
			[filter]
				id={DEFENDER}
			[/filter]
			variable=stored_defender
		[/store_unit]

		{VARIABLE_OP stored_defender.hitpoints value {HITPOINTS2}}
		{VARIABLE_OP stored_defender.experience add 1}

		[unstore_unit]
			variable=stored_defender
			find_vacant=no
		[/unstore_unit]

		{AsoR_REDRAW}

		{CLEAR_VARIABLE stored_attacker}
		{CLEAR_VARIABLE stored_defender}
#enddef

#define AsoR_HOLY_AMULET SIDE NUMBER X Y
	[event]
		name=prestart
		[item]
			x={X}
			y={Y}
			image=items/ankh-necklace.png
		[/item]
		{VARIABLE necklace_picked_up 0}
		{VARIABLE number             0}
	[/event]

	[event]
		name=moveto
		first_time_only=no
		[filter]
			side={SIDE}
			x={X}
			y={Y}
		[/filter]
		[message]
			speaker=unit
			message= _ "Here is something between the stones. Should I take it?"
		[/message]
		[if]
			[variable]
				name=necklace_picked_up
				numerical_equals=0
			[/variable]
			[then]
				[message]
					speaker=narrator
					message= _ "Wearing this amulet will cause every blow you deal to inflict arcane damage!"
					image=icons/jewelry_necklace_amber.png
					[option]
						message= _ "Take it"
						image=items/ankh-necklace.png
						[command]
							[object]
								[filter]
									x,y=$unit.x,$unit.y
								[/filter]
								name= _ "Holy Amulet"
								image=icons/jewelry_necklace_amber.png
								duration=forever
								id={NUMBER}holy_amulet
								description= _ "Wearing this amulet will cause every blow you deal to inflict arcane damage!"
								[effect]
									apply_to=attack
									range=melee
									set_type=arcane
								[/effect]
								[effect]
									apply_to=attack
									range=ranged
									set_type=arcane
								[/effect]
							[/object]
							{VARIABLE_OP necklace_picked_up add 1}
							[remove_item]
								x,y=$unit.x,$unit.y
							[/remove_item]
							[unit_overlay]
								x,y=$unit.x,$unit.y
								image="icons/arcane-icon.png"
							[/unit_overlay]
							[role]
								x,y=$unit.x,$unit.y
								role=has_arcane_neclace
							[/role]
						[/command]
					[/option]
					[option]
						message= _ "Leave it"
						[command]
							[allow_undo]
							[/allow_undo]
						[/command]
					[/option]
				[/message]
			[/then]
		[/if]
	[/event]

	[event]
		name=victory
		{CLEAR_VARIABLE necklace_picked_up}
	[/event]
#enddef
